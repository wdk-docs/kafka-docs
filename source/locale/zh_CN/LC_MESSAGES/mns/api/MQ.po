# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the kafka docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: kafka docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-23 14:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/mns/api/MQ.rst:2
msgid "MQ"
msgstr "MQ"

#: ../../source/mns/api/MQ.rst:5
msgid "MQ(name:string, account:Account, region?:string|Region)"
msgstr "MQ(name:string, account:Account, region?:string|Region)"

#: ../../source/mns/api/MQ.rst:7
msgid "The *MQ* operate the message in a queue."
msgstr "The *MQ* operate the message in a queue."

#: ../../source/mns/api/MQ.rst:9
msgid "name: String. The name of mq."
msgstr "name: String. The name of mq."

#: ../../source/mns/api/MQ.rst:11
msgid "account: An account object."
msgstr "account: An account object."

#: ../../source/mns/api/MQ.rst:13
msgid ""
"region: String|Region, optional. If it is string, it can be “hangzhou”, "
"“beijing” or any Chinese datacenter city name. If it is Region, it allows"
" you to specify data center other than in China. Default is “hangzhou”. "
"It can also be internal or vpc address “hangzhou-internal”, “beijing-"
"internal” or “qingdao-internal-vpc”."
msgstr "region: String|Region, optional. If it is string, it can be “hangzhou”, “beijing” or any Chinese datacenter city name. If it is Region, it allows you to specify data center other than in China. Default is “hangzhou”. It can also be internal or vpc address “hangzhou-internal”, “beijing-internal” or “qingdao-internal-vpc”."

#: ../../source/mns/api/MQ.rst:29
msgid "mq.getName()"
msgstr "mq.getName()"

#: ../../source/mns/api/MQ.rst:31
msgid "Gets the name of mq."
msgstr "Gets the name of mq."

#: ../../source/mns/api/MQ.rst:34
msgid "mq.getAccount()"
msgstr "mq.getAccount()"

#: ../../source/mns/api/MQ.rst:36
msgid "Gets the account of mq."
msgstr "Gets the account of mq."

#: ../../source/mns/api/MQ.rst:39
msgid "mq.getRegion()"
msgstr "mq.getRegion()"

#: ../../source/mns/api/MQ.rst:41
msgid "Gets the region of mq."
msgstr "Gets the region of mq."

#: ../../source/mns/api/MQ.rst:44
msgid "mq.sendP(msg:string, priority?:number, delaySeconds?:number)"
msgstr "mq.sendP(msg:string, priority?:number, delaySeconds?:number)"

#: ../../source/mns/api/MQ.rst:46
msgid "Send a message to the queue."
msgstr "Send a message to the queue."

#: ../../source/mns/api/MQ.rst:48
msgid "message: String. The content that sent to queue."
msgstr "message: String. The content that sent to queue."

#: ../../source/mns/api/MQ.rst:50
msgid "priority: number, optional. 1(lowest)~16(highest), default is 8."
msgstr "priority: number, optional. 1(lowest)~16(highest), default is 8."

#: ../../source/mns/api/MQ.rst:52
msgid ""
"delaySeconds: number, optional. How many seconds will the messages be "
"visible after sent. 0~604800(7days), default is 0. This argument is prior"
" to the options.DelaySeconds in attributes of message queue."
msgstr "delaySeconds: number, optional. How many seconds will the messages be visible after sent. 0~604800(7days), default is 0. This argument is prior to the options.DelaySeconds in attributes of message queue."

#: ../../source/mns/api/MQ.rst:61
msgid "mq.getRecvTolerance() & mq.setRecvTolerance(value:number)"
msgstr "mq.getRecvTolerance() & mq.setRecvTolerance(value:number)"

#: ../../source/mns/api/MQ.rst:63
msgid "Gets or sets the tolerance seconds for mq.recvP method."
msgstr "Gets or sets the tolerance seconds for mq.recvP method."

#: ../../source/mns/api/MQ.rst:65
msgid ""
"value: number. Default is 5, in seconds. How long will mq.recvP wait "
"before timeout. Due to network lag, the return of mq.recvP method may be "
"later than expected."
msgstr "value: number. Default is 5, in seconds. How long will mq.recvP wait before timeout. Due to network lag, the return of mq.recvP method may be later than expected."

#: ../../source/mns/api/MQ.rst:70
msgid "mq.recvP(waitSeconds?:number)"
msgstr "mq.recvP(waitSeconds?:number)"

#: ../../source/mns/api/MQ.rst:72
msgid ""
"Receive a message from queue. This will change the message to invisible "
"for a while."
msgstr "Receive a message from queue. This will change the message to invisible for a while."

#: ../../source/mns/api/MQ.rst:75
msgid ""
"waitSeconds: number. optional. The max seconds to wait if queue is empty,"
" after that an error *MessageNotExist* will be returned."
msgstr "waitSeconds: number. optional. The max seconds to wait if queue is empty, after that an error *MessageNotExist* will be returned."

#: ../../source/mns/api/MQ.rst:82
msgid ""
"This method will wait ``waitSeconds + getRecvTolerance()`` totally if "
"queue is empty."
msgstr "This method will wait ``waitSeconds + getRecvTolerance()`` totally if queue is empty."

#: ../../source/mns/api/MQ.rst:86
msgid "mq.peekP()"
msgstr "mq.peekP()"

#: ../../source/mns/api/MQ.rst:88
msgid "Peek a message. This will not change the message to invisible."
msgstr "Peek a message. This will not change the message to invisible."

#: ../../source/mns/api/MQ.rst:95
msgid "mq.deleteP(receiptHandle:string)"
msgstr "mq.deleteP(receiptHandle:string)"

#: ../../source/mns/api/MQ.rst:97
msgid ""
"Delete a message from queue. A message will be invisible for a short time"
" after received. A message must be deleted after processed, otherwise it "
"can be received again."
msgstr "Delete a message from queue. A message will be invisible for a short time after received. A message must be deleted after processed, otherwise it can be received again."

#: ../../source/mns/api/MQ.rst:101 ../../source/mns/api/MQ.rst:114
msgid "receiptHandle: String. Return by mq.recvP or mq.notifyRecv."
msgstr "receiptHandle: String. Return by mq.recvP or mq.notifyRecv."

#: ../../source/mns/api/MQ.rst:110
msgid "mq.reserveP(receiptHandle:string, reserveSeconds:number)"
msgstr "mq.reserveP(receiptHandle:string, reserveSeconds:number)"

#: ../../source/mns/api/MQ.rst:112
msgid "Reserve a received message."
msgstr "Reserve a received message."

#: ../../source/mns/api/MQ.rst:116
msgid ""
"reserveSeconds: number. How long will the message be reserved, in "
"seconds. 1~43200(12hours)."
msgstr "reserveSeconds: number. How long will the message be reserved, in seconds. 1~43200(12hours)."

#: ../../source/mns/api/MQ.rst:127
msgid ""
"If you need more time to process the message after received, you can "
"reserve it for a longer time. The message will continue to keep invisible"
" for reserveSeconds from now. Set a shorter time is also possible. If "
"succeed, a new receiptHandle will be returned to replace the old one, "
"further mq.deleteP or mq.reserveP should use the newer. And the newer "
"receiptHandle will expired after reserveSeconds past."
msgstr ""

#: ../../source/mns/api/MQ.rst:135
msgid "mq.notifyRecv(cb:(ex:Error, msg:any)=>Boolean, waitSeconds?:number)"
msgstr "mq.notifyRecv(cb:(ex:Error, msg:any)=>Boolean, waitSeconds?:number)"

#: ../../source/mns/api/MQ.rst:137
msgid "Register a callback function to receive messages."
msgstr "Register a callback function to receive messages."

#: ../../source/mns/api/MQ.rst:139
msgid ""
"cb: The callback function will be called once for each received message. "
"And if the callback function return *true*, the message received will be "
"delete automatically, while you should delete the message manually, if "
"return *false*."
msgstr "cb: The callback function will be called once for each received message. And if the callback function return *true*, the message received will be delete automatically, while you should delete the message manually, if return *false*."

#: ../../source/mns/api/MQ.rst:144
msgid ""
"waitSeconds: number, optional. 1~30. The max seconds to wait in a polling"
" loop, default is 5. At the begin of a polling loop, it will check if "
"mq.notifyStopP has been called, So the bigger number will cause a slowly "
"mq.notifyStopP. Set waitSeconds to 0 ,will actually use the default value"
" 5 seconds instead."
msgstr "waitSeconds: number, optional. 1~30. The max seconds to wait in a polling loop, default is 5. At the begin of a polling loop, it will check if mq.notifyStopP has been called, So the bigger number will cause a slowly mq.notifyStopP. Set waitSeconds to 0 ,will actually use the default value 5 seconds instead."

#: ../../source/mns/api/MQ.rst:161
msgid ""
"Both callback functions will work if you call notifyRecv twice for 2 "
"different callback functions. But each received message only will trigger"
" one of them only."
msgstr "Both callback functions will work if you call notifyRecv twice for 2 different callback functions. But each received message only will trigger one of them only."

#: ../../source/mns/api/MQ.rst:166
msgid "mq.notifyStopP()"
msgstr "mq.notifyStopP()"

#: ../../source/mns/api/MQ.rst:168
msgid ""
"Stop mq.notifyRecv working. The promise object returned will not be "
"resolved until the receiving loop stopped actually. The max time wait for"
" notifyRecv() stop is determined by waitSeconds passed to mq.notifyRecv."
msgstr "Stop mq.notifyRecv working. The promise object returned will not be resolved until the receiving loop stopped actually. The max time wait for notifyRecv() stop is determined by waitSeconds passed to mq.notifyRecv."

#: ../../source/mns/api/MQ.rst:178
msgid "mq.getAttrsP()"
msgstr "mq.getAttrsP()"

#: ../../source/mns/api/MQ.rst:180
msgid "Get the attributes of the mq."
msgstr "Get the attributes of the mq."

#: ../../source/mns/api/MQ.rst:187
msgid "mq.setAttrsP(options:any)"
msgstr "mq.setAttrsP(options:any)"

#: ../../source/mns/api/MQ.rst:189
msgid "Modify the attributes of mq."
msgstr "Modify the attributes of mq."

#: ../../source/mns/api/MQ.rst:191
msgid ""
"options: the queue attributes. See the `options <#options>`__ of "
"mns.createP."
msgstr "options: the queue attributes. See the `options <#options>`__ of mns.createP."

