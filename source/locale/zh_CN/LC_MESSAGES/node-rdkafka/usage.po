# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the kafka docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: kafka docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-23 14:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/node-rdkafka/usage.rst:2
msgid "用法"
msgstr "用法"

#: ../../source/node-rdkafka/usage.rst:4
msgid "You can install the ``node-rdkafka`` module like any other module:"
msgstr "You can install the ``node-rdkafka`` module like any other module:"

#: ../../source/node-rdkafka/usage.rst:10
msgid "To use the module, you must ``require`` it."
msgstr "To use the module, you must ``require`` it."

#: ../../source/node-rdkafka/usage.rst:17
msgid "组态"
msgstr "组态"

#: ../../source/node-rdkafka/usage.rst:19
msgid ""
"You can pass many configuration options to ``librdkafka``. A full list "
"can be found in ``librdkafka``\\ ’s `Configuration.md "
"<https://github.com/edenhill/librdkafka/blob/0.11.1.x/CONFIGURATION.md>`__"
msgstr "You can pass many configuration options to ``librdkafka``. A full list can be found in ``librdkafka``\\ ’s `Configuration.md <https://github.com/edenhill/librdkafka/blob/0.11.1.x/CONFIGURATION.md>`__"

#: ../../source/node-rdkafka/usage.rst:23
msgid ""
"Configuration keys that have the suffix ``_cb`` are designated as "
"callbacks. Some of these keys are informational and you can choose to "
"opt-in (for example, ``dr_cb``). Others are callbacks designed to return "
"a value, such as ``partitioner_cb``."
msgstr "Configuration keys that have the suffix ``_cb`` are designated as callbacks. Some of these keys are informational and you can choose to opt-in (for example, ``dr_cb``). Others are callbacks designed to return a value, such as ``partitioner_cb``."

#: ../../source/node-rdkafka/usage.rst:28
msgid ""
"Not all of these options are supported. The library will throw an error "
"if the value you send in is invalid."
msgstr "Not all of these options are supported. The library will throw an error if the value you send in is invalid."

#: ../../source/node-rdkafka/usage.rst:31
msgid ""
"The library currently supports the following callbacks: \\* "
"``partitioner_cb`` \\* ``dr_cb`` or ``dr_msg_cb`` \\* ``event_cb``"
msgstr "The library currently supports the following callbacks: \\* ``partitioner_cb`` \\* ``dr_cb`` or ``dr_msg_cb`` \\* ``event_cb``"

#: ../../source/node-rdkafka/usage.rst:35
msgid "Librdkafka方法"
msgstr "Librdkafka方法"

#: ../../source/node-rdkafka/usage.rst:37
msgid ""
"This library includes two utility functions for detecting the status of "
"your installation. Please try to include these when making issue reports "
"where applicable."
msgstr "This library includes two utility functions for detecting the status of your installation. Please try to include these when making issue reports where applicable."

#: ../../source/node-rdkafka/usage.rst:41
msgid ""
"You can get the features supported by your compile of ``librdkafka`` by "
"reading the variable “features” on the root of the ``node-rdkafka`` "
"object."
msgstr "You can get the features supported by your compile of ``librdkafka`` by reading the variable “features” on the root of the ``node-rdkafka`` object."

#: ../../source/node-rdkafka/usage.rst:52
msgid "You can also get the version of ``librdkafka``"
msgstr "You can also get the version of ``librdkafka``"

#: ../../source/node-rdkafka/usage.rst:62
msgid "发送消息"
msgstr "发送消息"

#: ../../source/node-rdkafka/usage.rst:64
msgid ""
"A ``Producer`` sends messages to Kafka. The ``Producer`` constructor "
"takes a configuration object, as shown in the following example:"
msgstr "A ``Producer`` sends messages to Kafka. The ``Producer`` constructor takes a configuration object, as shown in the following example:"

#: ../../source/node-rdkafka/usage.rst:73
msgid ""
"A ``Producer`` requires only ``metadata.broker.list`` (the Kafka brokers)"
" to be created. The values in this list are separated by commas. For "
"other configuration options, see the `Configuration.md "
"<https://github.com/edenhill/librdkafka/blob/0.11.1.x/CONFIGURATION.md>`__"
" file described previously."
msgstr "A ``Producer`` requires only ``metadata.broker.list`` (the Kafka brokers) to be created. The values in this list are separated by commas. For other configuration options, see the `Configuration.md <https://github.com/edenhill/librdkafka/blob/0.11.1.x/CONFIGURATION.md>`__ file described previously."

#: ../../source/node-rdkafka/usage.rst:79
msgid ""
"The following example illustrates a list with several ``librdkafka`` "
"options set."
msgstr "The following example illustrates a list with several ``librdkafka`` options set."

#: ../../source/node-rdkafka/usage.rst:100
msgid ""
"You can easily use the ``Producer`` as a writable stream immediately "
"after creation (as shown in the following example):"
msgstr "You can easily use the ``Producer`` as a writable stream immediately after creation (as shown in the following example):"

#: ../../source/node-rdkafka/usage.rst:130
msgid ""
"If you do not want your code to crash when an error happens, ensure you "
"have an ``error`` listener on the stream. Most errors are not necessarily"
" fatal, but the ones that are will immediately destroy the stream. If you"
" use ``autoClose``, the stream will close itself at the first sign of a "
"problem."
msgstr "If you do not want your code to crash when an error happens, ensure you have an ``error`` listener on the stream. Most errors are not necessarily fatal, but the ones that are will immediately destroy the stream. If you use ``autoClose``, the stream will close itself at the first sign of a problem."

#: ../../source/node-rdkafka/usage.rst:139
msgid ""
"The Standard API is more performant, particularly when handling high "
"volumes of messages. However, it requires more manual setup to use. The "
"following example illustrates its use:"
msgstr "The Standard API is more performant, particularly when handling high volumes of messages. However, it requires more manual setup to use. The following example illustrates its use:"

#: ../../source/node-rdkafka/usage.rst:184
msgid ""
"To see the configuration options available to you, see the `Configuration"
" <#configuration>`__ section."
msgstr "To see the configuration options available to you, see the `Configuration <#configuration>`__ section."

#: ../../source/node-rdkafka/usage.rst:191
#: ../../source/node-rdkafka/usage.rst:499
msgid "Method"
msgstr "Method"

#: ../../source/node-rdkafka/usage.rst:191
#: ../../source/node-rdkafka/usage.rst:257
#: ../../source/node-rdkafka/usage.rst:499
#: ../../source/node-rdkafka/usage.rst:544
msgid "Description"
msgstr "Description"

#: ../../source/node-rdkafka/usage.rst:193
msgid "``producer.connect()``"
msgstr "``producer.connect()``"

#: ../../source/node-rdkafka/usage.rst:193
msgid ""
"Connects to the broker. The ``connect()`` method emits the ``ready`` "
"event when it connects successfully. If it does not, the error will be "
"passed through the callback."
msgstr "Connects to the broker. The ``connect()`` method emits the ``ready`` event when it connects successfully. If it does not, the error will be passed through the callback."

#: ../../source/node-rdkafka/usage.rst:199
msgid "``producer.disconnect()``"
msgstr "``producer.disconnect()``"

#: ../../source/node-rdkafka/usage.rst:199
msgid ""
"Disconnects from the broker. The ``disconnect()`` method emits the "
"``disconnected`` event when it has disconnected. If it does not, the "
"error will be passed through the callback."
msgstr "Disconnects from the broker. The ``disconnect()`` method emits the ``disconnected`` event when it has disconnected. If it does not, the error will be passed through the callback."

#: ../../source/node-rdkafka/usage.rst:205
msgid "``producer.poll()``"
msgstr "``producer.poll()``"

#: ../../source/node-rdkafka/usage.rst:205
msgid ""
"Polls the producer for delivery reports or other events to be transmitted"
" via the emitter. In order to get the events in ``librdkafka``\\ ’s queue"
" to emit, you must call this regularly."
msgstr "Polls the producer for delivery reports or other events to be transmitted via the emitter. In order to get the events in ``librdkafka``\\ ’s queue to emit, you must call this regularly."

#: ../../source/node-rdkafka/usage.rst:211
msgid "``producer.setPollInterval (interval)``"
msgstr "``producer.setPollInterval (interval)``"

#: ../../source/node-rdkafka/usage.rst:211
msgid ""
"Polls the producer on this interval, handling disconnections and "
"reconnection. Set it to 0 to turn it off."
msgstr "Polls the producer on this interval, handling disconnections and reconnection. Set it to 0 to turn it off."

#: ../../source/node-rdkafka/usage.rst:216
msgid "``producer.produce(topic, partition, msg, key, times tamp, opaque)``"
msgstr "``producer.produce(topic, partition, msg, key, times tamp, opaque)``"

#: ../../source/node-rdkafka/usage.rst:216
msgid ""
"Sends a message. The ``produce()`` method throws when produce would "
"return an error. Ordinarily, this is just if the queue is full."
msgstr "Sends a message. The ``produce()`` method throws when produce would return an error. Ordinarily, this is just if the queue is full."

#: ../../source/node-rdkafka/usage.rst:221
msgid "``producer.flush(timeout, callback)``"
msgstr "``producer.flush(timeout, callback)``"

#: ../../source/node-rdkafka/usage.rst:221
msgid ""
"Flush the librdkafka internal queue, sending all messages. Default "
"timeout is 500ms"
msgstr "Flush the librdkafka internal queue, sending all messages. Default timeout is 500ms"

#: ../../source/node-rdkafka/usage.rst:229
msgid ""
"Some configuration properties that end in ``_cb`` indicate that an event "
"should be generated for that option. You can either:"
msgstr "Some configuration properties that end in ``_cb`` indicate that an event should be generated for that option. You can either:"

#: ../../source/node-rdkafka/usage.rst:232
msgid "provide a value of ``true`` and react to the event"
msgstr "provide a value of ``true`` and react to the event"

#: ../../source/node-rdkafka/usage.rst:233
msgid "provide a callback function directly"
msgstr "provide a callback function directly"

#: ../../source/node-rdkafka/usage.rst:235
msgid "The following example illustrates an event:"
msgstr "The following example illustrates an event:"

#: ../../source/node-rdkafka/usage.rst:254
msgid "The following table describes types of events."
msgstr "The following table describes types of events."

#: ../../source/node-rdkafka/usage.rst:257
#: ../../source/node-rdkafka/usage.rst:544
msgid "Event"
msgstr "Event"

#: ../../source/node-rdkafka/usage.rst:259
#: ../../source/node-rdkafka/usage.rst:549
msgid "``disconnected``"
msgstr "``disconnected``"

#: ../../source/node-rdkafka/usage.rst:259
msgid ""
"The ``disconnected`` event is emitted when the broker has disconnected. "
"This event is emitted only when ``.disconnect`` is called. The wrapper "
"will always try to reconnect otherwise."
msgstr "The ``disconnected`` event is emitted when the broker has disconnected. This event is emitted only when ``.disconnect`` is called. The wrapper will always try to reconnect otherwise."

#: ../../source/node-rdkafka/usage.rst:265
#: ../../source/node-rdkafka/usage.rst:555
msgid "``ready``"
msgstr "``ready``"

#: ../../source/node-rdkafka/usage.rst:265
msgid ""
"The ``ready`` event is emitted when the ``Producer`` is ready to send "
"messages."
msgstr "The ``ready`` event is emitted when the ``Producer`` is ready to send messages."

#: ../../source/node-rdkafka/usage.rst:268
#: ../../source/node-rdkafka/usage.rst:558
msgid "``event``"
msgstr "``event``"

#: ../../source/node-rdkafka/usage.rst:268
#: ../../source/node-rdkafka/usage.rst:558
msgid ""
"The ``event`` event is emitted when ``librdkafka`` reports an event (if "
"you opted in via the ``event_cb`` option)."
msgstr "The ``event`` event is emitted when ``librdkafka`` reports an event (if you opted in via the ``event_cb`` option)."

#: ../../source/node-rdkafka/usage.rst:272
#: ../../source/node-rdkafka/usage.rst:562
msgid "``event.log``"
msgstr "``event.log``"

#: ../../source/node-rdkafka/usage.rst:272
msgid ""
"The ``event.log`` event is emitted when logging events come in (if you "
"opted into logging via the ``event_cb`` option). You will need to set a "
"value for ``debug`` if you want to send information."
msgstr "The ``event.log`` event is emitted when logging events come in (if you opted into logging via the ``event_cb`` option). You will need to set a value for ``debug`` if you want to send information."

#: ../../source/node-rdkafka/usage.rst:279
#: ../../source/node-rdkafka/usage.rst:569
msgid "``event.stats``"
msgstr "``event.stats``"

#: ../../source/node-rdkafka/usage.rst:279
#: ../../source/node-rdkafka/usage.rst:569
msgid ""
"The ``event.stats`` event is emitted when ``librdkafka`` reports stats "
"(if you opted in by setting the ``statistics.interval.ms`` to a non-zero "
"value)."
msgstr "The ``event.stats`` event is emitted when ``librdkafka`` reports stats (if you opted in by setting the ``statistics.interval.ms`` to a non-zero value)."

#: ../../source/node-rdkafka/usage.rst:285
msgid "``event.error``"
msgstr "``event.error``"

#: ../../source/node-rdkafka/usage.rst:285
msgid "The ``event.error`` event is emitted when ``librdkafka`` reports an error"
msgstr "The ``event.error`` event is emitted when ``librdkafka`` reports an error"

#: ../../source/node-rdkafka/usage.rst:288
#: ../../source/node-rdkafka/usage.rst:575
msgid "``event.throttle``"
msgstr "``event.throttle``"

#: ../../source/node-rdkafka/usage.rst:288
msgid ""
"The ``event.throttle`` event emitted when ``librdkafka`` reports "
"throttling."
msgstr "The ``event.throttle`` event emitted when ``librdkafka`` reports throttling."

#: ../../source/node-rdkafka/usage.rst:291
msgid "``delivery-report``"
msgstr "``delivery-report``"

#: ../../source/node-rdkafka/usage.rst:291
msgid ""
"The ``delivery-report`` event is emitted when a delivery report has been "
"found via polling. To use this event, you must set "
"``request.required.acks`` to ``1`` or ``-1`` in topic configuration and "
"``dr_cb`` (or ``dr_msg_cb`` if you want the report to contain the message"
" payload) to ``true`` in the ``Producer`` constructor options."
msgstr "The ``delivery-report`` event is emitted when a delivery report has been found via polling. To use this event, you must set ``request.required.acks`` to ``1`` or ``-1`` in topic configuration and ``dr_cb`` (or ``dr_msg_cb`` if you want the report to contain the message payload) to ``true`` in the ``Producer`` constructor options."

#: ../../source/node-rdkafka/usage.rst:304
msgid "Kafka.KafkaConsumer"
msgstr "Kafka.KafkaConsumer"

#: ../../source/node-rdkafka/usage.rst:306
msgid ""
"To read messages from Kafka, you use a ``KafkaConsumer``. You instantiate"
" a ``KafkaConsumer`` object as follows:"
msgstr "To read messages from Kafka, you use a ``KafkaConsumer``. You instantiate a ``KafkaConsumer`` object as follows:"

#: ../../source/node-rdkafka/usage.rst:316
msgid ""
"The first parameter is the global config, while the second parameter is "
"the topic config that gets applied to all subscribed topics. To view a "
"list of all supported configuration properties, see the `Configuration.md"
" <https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md>`__"
" file described previously. Look for the ``C`` and ``*`` keys."
msgstr "The first parameter is the global config, while the second parameter is the topic config that gets applied to all subscribed topics. To view a list of all supported configuration properties, see the `Configuration.md <https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md>`__ file described previously. Look for the ``C`` and ``*`` keys."

#: ../../source/node-rdkafka/usage.rst:322
msgid ""
"The ``group.id`` and ``metadata.broker.list`` properties are required for"
" a consumer."
msgstr "The ``group.id`` and ``metadata.broker.list`` properties are required for a consumer."

#: ../../source/node-rdkafka/usage.rst:326
msgid "再平衡"
msgstr "再平衡"

#: ../../source/node-rdkafka/usage.rst:328
msgid ""
"Rebalancing is managed internally by ``librdkafka`` by default. If you "
"would like to override this functionality, you may provide your own logic"
" as a rebalance callback."
msgstr "Rebalancing is managed internally by ``librdkafka`` by default. If you would like to override this functionality, you may provide your own logic as a rebalance callback."

#: ../../source/node-rdkafka/usage.rst:354
msgid ""
"``this`` is bound to the ``KafkaConsumer`` you have created. By "
"specifying a ``rebalance_cb`` you can also listen to the ``rebalance`` "
"event as an emitted event. This event is not emitted when using the "
"internal ``librdkafka`` rebalancer."
msgstr "``this`` is bound to the ``KafkaConsumer`` you have created. By specifying a ``rebalance_cb`` you can also listen to the ``rebalance`` event as an emitted event. This event is not emitted when using the internal ``librdkafka`` rebalancer."

#: ../../source/node-rdkafka/usage.rst:360
msgid "提交"
msgstr "提交"

#: ../../source/node-rdkafka/usage.rst:362
msgid ""
"When you commit in ``node-rdkafka``, the standard way is to queue the "
"commit request up with the next ``librdkafka`` request to the broker. "
"When doing this, there isn’t a way to know the result of the commit. "
"Luckily there is another callback you can listen to to get this "
"information"
msgstr "When you commit in ``node-rdkafka``, the standard way is to queue the commit request up with the next ``librdkafka`` request to the broker. When doing this, there isn’t a way to know the result of the commit. Luckily there is another callback you can listen to to get this information"

#: ../../source/node-rdkafka/usage.rst:386
msgid ""
"``this`` is bound to the ``KafkaConsumer`` you have created. By "
"specifying an ``offset_commit_cb`` you can also listen to the "
"``offset.commit`` event as an emitted event. It also has an error "
"parameter and a list of topic partitions. This is not emitted unless "
"opted in."
msgstr "``this`` is bound to the ``KafkaConsumer`` you have created. By specifying an ``offset_commit_cb`` you can also listen to the ``offset.commit`` event as an emitted event. It also has an error parameter and a list of topic partitions. This is not emitted unless opted in."

#: ../../source/node-rdkafka/usage.rst:393
msgid "消息结构"
msgstr "消息结构"

#: ../../source/node-rdkafka/usage.rst:395
msgid ""
"Messages that are returned by the ``KafkaConsumer`` have the following "
"structure."
msgstr "Messages that are returned by the ``KafkaConsumer`` have the following structure."

#: ../../source/node-rdkafka/usage.rst:413
msgid "流API"
msgstr "流API"

#: ../../source/node-rdkafka/usage.rst:415
msgid ""
"The stream API is the easiest way to consume messages. The following "
"example illustrates the use of the stream API:"
msgstr "The stream API is the easiest way to consume messages. The following example illustrates the use of the stream API:"

#: ../../source/node-rdkafka/usage.rst:430
msgid ""
"You can also get the ``consumer`` from the streamConsumer, for using "
"consumer methods. The following example illustrates that:"
msgstr "You can also get the ``consumer`` from the streamConsumer, for using consumer methods. The following example illustrates that:"

#: ../../source/node-rdkafka/usage.rst:440
msgid "标准API"
msgstr "标准API"

#: ../../source/node-rdkafka/usage.rst:442
msgid ""
"You can also use the Standard API and manage callbacks and events "
"yourself. You can choose different modes for consuming messages:"
msgstr "You can also use the Standard API and manage callbacks and events yourself. You can choose different modes for consuming messages:"

#: ../../source/node-rdkafka/usage.rst:445
msgid ""
"*Flowing mode*. This mode flows all of the messages it can read by "
"maintaining an infinite loop in the event loop. It only stops when it "
"detects the consumer has issued the ``unsubscribe`` or ``disconnect`` "
"method."
msgstr "*Flowing mode*. This mode flows all of the messages it can read by maintaining an infinite loop in the event loop. It only stops when it detects the consumer has issued the ``unsubscribe`` or ``disconnect`` method."

#: ../../source/node-rdkafka/usage.rst:449
msgid ""
"*Non-flowing mode*. This mode reads a single message from Kafka at a time"
" manually."
msgstr "*Non-flowing mode*. This mode reads a single message from Kafka at a time manually."

#: ../../source/node-rdkafka/usage.rst:452
msgid "The following example illustrates flowing mode:"
msgstr "The following example illustrates flowing mode:"

#: ../../source/node-rdkafka/usage.rst:473
msgid "The following example illustrates non-flowing mode:"
msgstr "The following example illustrates non-flowing mode:"

#: ../../source/node-rdkafka/usage.rst:496
msgid "The following table lists important methods for this API."
msgstr "The following table lists important methods for this API."

#: ../../source/node-rdkafka/usage.rst:501
msgid "``consumer.connect()``"
msgstr "``consumer.connect()``"

#: ../../source/node-rdkafka/usage.rst:501
msgid ""
"Connects to the broker. The ``connect()`` emits the event ``ready`` when "
"it has successfully connected. If it does not, the error will be passed "
"through the callback."
msgstr "Connects to the broker. The ``connect()`` emits the event ``ready`` when it has successfully connected. If it does not, the error will be passed through the callback."

#: ../../source/node-rdkafka/usage.rst:507
msgid "``consumer.disconnect()``"
msgstr "``consumer.disconnect()``"

#: ../../source/node-rdkafka/usage.rst:507
msgid ""
"Disconnects from the broker. The ``disconnect()`` method emits "
"``disconnected`` when it has disconnected. If it does not, the error will"
" be passed through the callback."
msgstr "Disconnects from the broker. The ``disconnect()`` method emits ``disconnected`` when it has disconnected. If it does not, the error will be passed through the callback."

#: ../../source/node-rdkafka/usage.rst:513
msgid "``consumer.subscribe(topic s)``"
msgstr "``consumer.subscribe(topic s)``"

#: ../../source/node-rdkafka/usage.rst:513
msgid "Subscribes to an array of topics."
msgstr "Subscribes to an array of topics."

#: ../../source/node-rdkafka/usage.rst:516
msgid "``consumer.unsubscribe()``"
msgstr "``consumer.unsubscribe()``"

#: ../../source/node-rdkafka/usage.rst:516
msgid ""
"Unsubscribes from the currently subscribed topics. You cannot subscribe "
"to different topics without calling the ``unsubscribe()`` method first."
msgstr "Unsubscribes from the currently subscribed topics. You cannot subscribe to different topics without calling the ``unsubscribe()`` method first."

#: ../../source/node-rdkafka/usage.rst:521
msgid "``consumer.consume(cb)``"
msgstr "``consumer.consume(cb)``"

#: ../../source/node-rdkafka/usage.rst:521
msgid ""
"Gets messages from the existing subscription as quickly as possible. This"
" method keeps a background thread running to do the work. If ``cb`` is "
"specified, invokes ``cb(err, message)``."
msgstr "Gets messages from the existing subscription as quickly as possible. This method keeps a background thread running to do the work. If ``cb`` is specified, invokes ``cb(err, message)``."

#: ../../source/node-rdkafka/usage.rst:528
msgid "``consumer.consume(number,cb)``"
msgstr "``consumer.consume(number,cb)``"

#: ../../source/node-rdkafka/usage.rst:528
msgid ""
"Gets ``number`` of messages from the existing subscription. If ``cb`` is "
"specified, invokes ``cb(err, message)``."
msgstr "Gets ``number`` of messages from the existing subscription. If ``cb`` is specified, invokes ``cb(err, message)``."

#: ../../source/node-rdkafka/usage.rst:532
msgid "``consumer.commit()``"
msgstr "``consumer.commit()``"

#: ../../source/node-rdkafka/usage.rst:532
msgid "Commits all locally stored offsets"
msgstr "Commits all locally stored offsets"

#: ../../source/node-rdkafka/usage.rst:534
msgid "``consumer.commit(topicPartition)``"
msgstr "``consumer.commit(topicPartition)``"

#: ../../source/node-rdkafka/usage.rst:534
msgid "Commits offsets specified by the topic partition"
msgstr "Commits offsets specified by the topic partition"

#: ../../source/node-rdkafka/usage.rst:537
msgid "``consumer.commitMessage(message)``"
msgstr "``consumer.commitMessage(message)``"

#: ../../source/node-rdkafka/usage.rst:537
msgid "Commits the offsets specified by the message"
msgstr "Commits the offsets specified by the message"

#: ../../source/node-rdkafka/usage.rst:541
msgid "The following table lists events for this API."
msgstr "The following table lists events for this API."

#: ../../source/node-rdkafka/usage.rst:546
msgid "``data``"
msgstr "``data``"

#: ../../source/node-rdkafka/usage.rst:546
msgid "When using the Standard API consumed messages are emitted in this event."
msgstr "When using the Standard API consumed messages are emitted in this event."

#: ../../source/node-rdkafka/usage.rst:549
msgid ""
"The ``disconnected`` event is emitted when the broker disconnects. This "
"event is only emitted when ``.disconnect`` is called. The wrapper will "
"always try to reconnect otherwise."
msgstr "The ``disconnected`` event is emitted when the broker disconnects. This event is only emitted when ``.disconnect`` is called. The wrapper will always try to reconnect otherwise."

#: ../../source/node-rdkafka/usage.rst:555
msgid ""
"The ``ready`` event is emitted when the ``Consumer`` is ready to read "
"messages."
msgstr "The ``ready`` event is emitted when the ``Consumer`` is ready to read messages."

#: ../../source/node-rdkafka/usage.rst:562
msgid ""
"The ``event.log`` event is emitted when logging events occur (if you "
"opted in for logging via the ``event_cb`` option). You will need to set a"
" value for ``debug`` if you want information to send."
msgstr "The ``event.log`` event is emitted when logging events occur (if you opted in for logging via the ``event_cb`` option). You will need to set a value for ``debug`` if you want information to send."

#: ../../source/node-rdkafka/usage.rst:575
msgid ""
"The ``event.throttle`` event is emitted when ``librdkafka`` reports "
"throttling."
msgstr "The ``event.throttle`` event is emitted when ``librdkafka`` reports throttling."

#: ../../source/node-rdkafka/usage.rst:580
msgid "从主体中读取代理的当前偏移量"
msgstr "从主体中读取代理的当前偏移量"

#: ../../source/node-rdkafka/usage.rst:582
msgid ""
"Some times you find yourself in the situation where you need to know the "
"latest (and earliest) offset for one of your topics. Connected producers "
"and consumers both allow you to query for these through "
"``queryWaterMarkOffsets`` like follows:"
msgstr "Some times you find yourself in the situation where you need to know the latest (and earliest) offset for one of your topics. Connected producers and consumers both allow you to query for these through ``queryWaterMarkOffsets`` like follows:"

#: ../../source/node-rdkafka/usage.rst:603
msgid "元数据"
msgstr "元数据"

#: ../../source/node-rdkafka/usage.rst:605
msgid ""
"Both ``Kafka.Producer`` and ``Kafka.KafkaConsumer`` include a "
"``getMetadata`` method to retrieve metadata from Kafka."
msgstr "Both ``Kafka.Producer`` and ``Kafka.KafkaConsumer`` include a ``getMetadata`` method to retrieve metadata from Kafka."

#: ../../source/node-rdkafka/usage.rst:608
msgid "Getting metadata on any connection returns the following data structure:"
msgstr "Getting metadata on any connection returns the following data structure:"

#: ../../source/node-rdkafka/usage.rst:637
msgid "The following example illustrates how to use the ``getMetadata`` method."
msgstr "The following example illustrates how to use the ``getMetadata`` method."

#: ../../source/node-rdkafka/usage.rst:639
msgid ""
"When fetching metadata for a specific topic, if a topic reference does "
"not exist, one is created using the default config. Please see the "
"documentation on ``Client.getMetadata`` if you want to set configuration "
"parameters, e.g. \\ ``acks``, on a topic to produce messages to."
msgstr "When fetching metadata for a specific topic, if a topic reference does not exist, one is created using the default config. Please see the documentation on ``Client.getMetadata`` if you want to set configuration parameters, e.g. \\ ``acks``, on a topic to produce messages to."

