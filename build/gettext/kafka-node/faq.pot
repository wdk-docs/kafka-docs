# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the kafka docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: kafka docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-23 14:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/kafka-node/faq.rst:2
msgid "Troubleshooting / FAQ"
msgstr "Troubleshooting / FAQ"

#: ../../source/kafka-node/faq.rst:5
msgid "HighLevelProducer with KeyedPartitioner errors on first send"
msgstr "HighLevelProducer with KeyedPartitioner errors on first send"

#: ../../source/kafka-node/faq.rst:7
msgid "Error:"
msgstr "Error:"

#: ../../source/kafka-node/faq.rst:13
msgid "Call ``client.refreshMetadata()`` before sending the first message. Reference issue `#354 <https://github.com/SOHU-Co/kafka-node/issues/354>`__"
msgstr "Call ``client.refreshMetadata()`` before sending the first message. Reference issue `#354 <https://github.com/SOHU-Co/kafka-node/issues/354>`__"

#: ../../source/kafka-node/faq.rst:18
msgid "How do I debug an issue?"
msgstr "How do I debug an issue?"

#: ../../source/kafka-node/faq.rst:20
msgid "This module uses the `debug module <https://github.com/visionmedia/debug>`__ so you can just run below before starting your app."
msgstr "This module uses the `debug module <https://github.com/visionmedia/debug>`__ so you can just run below before starting your app."

#: ../../source/kafka-node/faq.rst:29
msgid "How do I get a list of all topics?"
msgstr "How do I get a list of all topics?"

#: ../../source/kafka-node/faq.rst:31
msgid "Call ``client.loadMetadataForTopics`` with a blank topic array to get the entire list of available topics (and available brokers)."
msgstr "Call ``client.loadMetadataForTopics`` with a blank topic array to get the entire list of available topics (and available brokers)."

#: ../../source/kafka-node/faq.rst:46
msgid "For a new consumer how do I start consuming from the latest message in a partition?"
msgstr "For a new consumer how do I start consuming from the latest message in a partition?"

#: ../../source/kafka-node/faq.rst:48
msgid "If you are using the new ``ConsumerGroup`` simply set ``'latest'`` to ``fromOffset`` option."
msgstr "If you are using the new ``ConsumerGroup`` simply set ``'latest'`` to ``fromOffset`` option."

#: ../../source/kafka-node/faq.rst:51
msgid "Otherwise:"
msgstr "Otherwise:"

#: ../../source/kafka-node/faq.rst:53
msgid "Call ``offset.fetchLatestOffsets`` to get fetch the latest offset"
msgstr "Call ``offset.fetchLatestOffsets`` to get fetch the latest offset"

#: ../../source/kafka-node/faq.rst:54
msgid "Consume from returned offset"
msgstr "Consume from returned offset"

#: ../../source/kafka-node/faq.rst:56
msgid "Reference issue `#342 <https://github.com/SOHU-Co/kafka-node/issues/342>`__"
msgstr "Reference issue `#342 <https://github.com/SOHU-Co/kafka-node/issues/342>`__"

#: ../../source/kafka-node/faq.rst:60
msgid "FailedToRebalanceConsumerError: Exception: NODE_EXISTS[-110]"
msgstr "FailedToRebalanceConsumerError: Exception: NODE_EXISTS[-110]"

#: ../../source/kafka-node/faq.rst:62
msgid "This error can occur when a HLC is killed and restarted quickly. The ephemeral nodes linked to the previous session are not relinquished in zookeeper when ``SIGINT`` is sent and instead relinquished when zookeeper session timeout is reached. The timeout can be adjusted using the ``sessionTimeout`` zookeeper option when the ``Client`` is created (the default is 30000ms)."
msgstr "This error can occur when a HLC is killed and restarted quickly. The ephemeral nodes linked to the previous session are not relinquished in zookeeper when ``SIGINT`` is sent and instead relinquished when zookeeper session timeout is reached. The timeout can be adjusted using the ``sessionTimeout`` zookeeper option when the ``Client`` is created (the default is 30000ms)."

#: ../../source/kafka-node/faq.rst:69
msgid "Example handler:"
msgstr "Example handler:"

#: ../../source/kafka-node/faq.rst:79
msgid "Alternatively, you can avoid this issue entirely by omitting the HLC’s ``id`` and a unique one will be generated for you."
msgstr "Alternatively, you can avoid this issue entirely by omitting the HLC’s ``id`` and a unique one will be generated for you."

#: ../../source/kafka-node/faq.rst:82
msgid "Reference issue `#90 <https://github.com/SOHU-Co/kafka-node/issues/90>`__"
msgstr "Reference issue `#90 <https://github.com/SOHU-Co/kafka-node/issues/90>`__"

#: ../../source/kafka-node/faq.rst:86
msgid "HighLevelConsumer does not consume on all partitions"
msgstr "HighLevelConsumer does not consume on all partitions"

#: ../../source/kafka-node/faq.rst:88
msgid "Your partition will be stuck if the ``fetchMaxBytes`` is smaller than the message produced. Increase ``fetchMaxBytes`` value should resolve this issue."
msgstr "Your partition will be stuck if the ``fetchMaxBytes`` is smaller than the message produced. Increase ``fetchMaxBytes`` value should resolve this issue."

#: ../../source/kafka-node/faq.rst:92
msgid "Reference to issue `#339 <https://github.com/SOHU-Co/kafka-node/issues/339>`__"
msgstr "Reference to issue `#339 <https://github.com/SOHU-Co/kafka-node/issues/339>`__"

#: ../../source/kafka-node/faq.rst:96
msgid "How to throttle messages / control the concurrency of processing messages"
msgstr "How to throttle messages / control the concurrency of processing messages"

#: ../../source/kafka-node/faq.rst:98
msgid "Create a ``async.queue`` with message processor and concurrency of one (the message processor itself is wrapped with ``setImmediate`` so it will not freeze up the event loop)"
msgstr "Create a ``async.queue`` with message processor and concurrency of one (the message processor itself is wrapped with ``setImmediate`` so it will not freeze up the event loop)"

#: ../../source/kafka-node/faq.rst:101
msgid "Set the ``queue.drain`` to resume the consumer"
msgstr "Set the ``queue.drain`` to resume the consumer"

#: ../../source/kafka-node/faq.rst:102
msgid "The handler for consumer’s ``message`` event pauses the consumer and pushes the message to the queue."
msgstr "The handler for consumer’s ``message`` event pauses the consumer and pushes the message to the queue."

#: ../../source/kafka-node/faq.rst:106
msgid "How do I produce and consume binary data?"
msgstr "How do I produce and consume binary data?"

#: ../../source/kafka-node/faq.rst:109
msgid "Consume"
msgstr "Consume"

#: ../../source/kafka-node/faq.rst:111
msgid "In the consumer set the ``encoding`` option to ``buffer``."
msgstr "In the consumer set the ``encoding`` option to ``buffer``."

#: ../../source/kafka-node/faq.rst:114
msgid "Produce"
msgstr "Produce"

#: ../../source/kafka-node/faq.rst:116
msgid "Set the ``messages`` attribute in the ``payload`` to a ``Buffer``. ``TypedArrays`` such as ``Uint8Array`` are not supported and need to be converted to a ``Buffer``."
msgstr "Set the ``messages`` attribute in the ``payload`` to a ``Buffer``. ``TypedArrays`` such as ``Uint8Array`` are not supported and need to be converted to a ``Buffer``."

#: ../../source/kafka-node/faq.rst:126
msgid "Reference to issue `#470 <https://github.com/SOHU-Co/kafka-node/issues/470>`__ `#514 <https://github.com/SOHU-Co/kafka-node/issues/514>`__"
msgstr "Reference to issue `#470 <https://github.com/SOHU-Co/kafka-node/issues/470>`__ `#514 <https://github.com/SOHU-Co/kafka-node/issues/514>`__"

#: ../../source/kafka-node/faq.rst:131
msgid "What are these node-gyp and snappy errors?"
msgstr "What are these node-gyp and snappy errors?"

#: ../../source/kafka-node/faq.rst:133
msgid "Snappy is a optional compression library. Windows users have reported issues with installing it while running ``npm install``. It’s **optional** in kafka-node and can be skipped by using the ``--no-optional`` flag (though errors from it should not fail the install)."
msgstr "Snappy is a optional compression library. Windows users have reported issues with installing it while running ``npm install``. It’s **optional** in kafka-node and can be skipped by using the ``--no-optional`` flag (though errors from it should not fail the install)."

#: ../../source/kafka-node/faq.rst:143
msgid "Keep in mind if you try to use snappy without installing it ``kafka-node`` will throw a runtime exception."
msgstr "Keep in mind if you try to use snappy without installing it ``kafka-node`` will throw a runtime exception."

#: ../../source/kafka-node/faq.rst:147
msgid "How do I configure the log output?"
msgstr "How do I configure the log output?"

#: ../../source/kafka-node/faq.rst:149
msgid "By default, ``kafka-node`` uses `debug <https://github.com/visionmedia/debug>`__ to log important information. To integrate ``kafka-node``\\ ’s log output into an application, it is possible to set a logger provider. This enables filtering of log levels and easy redirection of output streams."
msgstr "By default, ``kafka-node`` uses `debug <https://github.com/visionmedia/debug>`__ to log important information. To integrate ``kafka-node``\\ ’s log output into an application, it is possible to set a logger provider. This enables filtering of log levels and easy redirection of output streams."

#: ../../source/kafka-node/faq.rst:156
msgid "What is a logger provider?"
msgstr "What is a logger provider?"

#: ../../source/kafka-node/faq.rst:158
msgid "A logger provider is a function which takes the name of a logger and returns a logger implementation. For instance, the following code snippet shows how a logger provider for the global ``console`` object could be written:"
msgstr "A logger provider is a function which takes the name of a logger and returns a logger implementation. For instance, the following code snippet shows how a logger provider for the global ``console`` object could be written:"

#: ../../source/kafka-node/faq.rst:175
msgid "The logger interface with its ``debug``, ``info``, ``warn`` and ``error`` methods expects format string support as seen in ``debug`` or the JavaScript ``console`` object. Many commonly used logging implementations cover this API, e.g. bunyan, pino or winston."
msgstr "The logger interface with its ``debug``, ``info``, ``warn`` and ``error`` methods expects format string support as seen in ``debug`` or the JavaScript ``console`` object. Many commonly used logging implementations cover this API, e.g. bunyan, pino or winston."

#: ../../source/kafka-node/faq.rst:181
msgid "How do I set a logger provider?"
msgstr "How do I set a logger provider?"

#: ../../source/kafka-node/faq.rst:183
msgid "For performance reasons, initialization of the ``kafka-node`` module creates all necessary loggers. This means that custom logger providers need to be set *before requiring the ``kafka-node`` module*. The following example shows how this can be done:"
msgstr "For performance reasons, initialization of the ``kafka-node`` module creates all necessary loggers. This means that custom logger providers need to be set *before requiring the ``kafka-node`` module*. The following example shows how this can be done:"

